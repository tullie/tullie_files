# Author: Tullie Murrell (tulliemurrell@gmail.com)

[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green
[alias]
  # Via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  snapshots = !git stash list --grep snapshot

  # Via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
  recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

  # Branch
  b = branch -v                     # Branch (verbose)

  # Commit
  c = commit -m                     # Commit with message
  ca = commit -am                   # Commit all with message
  ci = commit                       # Commit
  amend = commit --amend            # Ammend your last commit

  # Checkout
  co = checkout                     # Checkout
  nb = checkout -b                  # Create and switch to a new branch (mnemonic: "git new branch branchname...")

  # Cherry-pick
  cp = cherry-pick -x               # Grab a change from a branch

  # Diff
  d = diff                          # Diff unstaged changes
  dc = diff --cached                # Diff staged changes
  last = diff HEAD^                 # Diff last committed change

  # Log
  l = log --graph --date=short
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  simple = log --pretty=format:\" * %s\"
  shortnocolor = log --pretty=format:\"%h %cr %cn %s\"

  # Pull
  pl = pull                         # Pull

  # Push
  ps = push                         # Push

  # Rebase
  rc = rebase --continue            # Continue rebase
  rs = rebase --skip                # Skip rebase

  # Remote
  r = remote -v                     # Show remotes (verbose)

  # Reset
  unstage = reset HEAD              # Remove files from index (tracking)
  uncommit = reset --soft HEAD^     # Go back before last commit, with files in uncommitted state
  filelog = log -u                  # Show changes to a file
  mt = mergetool                    # Fire up the merge tool

  # Stash
  ss = stash                        # Stash changes
  sl = stash list                   # List stashes
  sa = stash apply                  # Apply stash (restore changes)
  sd = stash drop                   # Drop stashes (destory changes)

  # Status
  s = status                        # Status
[format]
  pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[mergetool]
  prompt = false
[mergetool "mvimdiff"]
  cmd = "mvim -c 'Gdiff' $MERGED"     # Use fugitive.vim for 3-way merge
  keepbackup = false
[merge]
  summary = true
  verbosity = 1
	tool = kdiff3
[apply]
  whitespace = nowarn
[branch]
  autosetupmerge = true
[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = upstream
[core]
  autocrlf = false
  editor = vim
  excludesfile = .gitignore # TODO(tullie): This might need to be a full directory path
[advice]
  statusHints = false
[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true
	algorithm = patience
[rerere]
  # Remember my merges
  # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
  enabled = true
[user]
	name = Tullie Murrell
	email = tulliemurrell@gmail.com
[http]
	proxy = fwdproxy:8080
